IF THERE IS AN ARRAY=[1,1,1,8,8,2,2];
THAN TO FIND THE SMALLEST ELEMENT WE HAVE TO ARRANGE THE ARRAY ELEMENT IN THE SMALLEST TO HIGHEST WAY
LIKE=[1,1,1,2,2,8,8];--->THIS OBSERVATION SAYS US THAT THE SMALLEST NUMBER ARE AT THE FIRST ANDF LARGEST ELEMENT ARE AT THE LAST

IF WE HAVE TWO NUMBER WHOSE DIGIT SUM IS =20;
NUMBER1=299
NUMBER2=389
TO FIND THE SMALLEST NUMBER AMONG GTHE ABOVE TWO NUMBER THE FIRST DIGIT OF THE NUMBER HAS A VERY BIG IMPORTANCE
2<3 SO THE NUMBER 1 IS SMALLER THAN NUMBER2
NEXT NUMBER1 HAS 8 AND NUMBER2 HAS 9 SO IF WE HAVE S SMALLER NUMBER IN THE FRONT THAN THE NEXT NUMBER WILL BE LARGER  SIMULTANEOUSLY 
IF WE HAVE A LARGER NUMBER IN THE FRONT THE NEXT NUMBER WIL BE SMALLER (THE CODNITION IS BASED ON THE BASED ON THE COMPARISON) 

WE CAN ALSO OBSERVE THAT THE END HAS THE 9 AND FRONT HAS SMALLER NUMBER EG-{SMALLER NUMBER,999999}
SO THE FINAL CONCLUSION IS--->>WE WANT AS MANY NUBMER OF 9 IN THE END
EG NUMBER IS 35 AND THE SUM OF THE DIGIT OF THE SMALLES NUMBER IS 35(NUMBER OF DIGIT IS 4)
4TH NUMBER=9
35-9=26
3RD NUMBER=9
26-9=16
2ND NUMBER=16-8=8
SO AS 8 IS SMALLER THAN THE 9 AND THE NUMBER OF DIGIT CONDITION IS SATISFIED SO WE WILL TAKE THE FIRST ELEMENT AS 8
THE FINAL SMALLEST NUMBER IS ==8999
BUT IF WE ARE GIVEN TO FIND THE SMALLEST SEVEN DIGIT NUMBER
THAN 0008999==WE WILL INCREMENT THE FIRST POSITION BY 1 ANF DECREMENT 8 BY 1,SO THE NUMBER IS 100799

SECOND SMALLEST NUMBER
125->SUM (8)
THE SECOND SMALLEST NUMBER FOR WHICVH THE SUM IS 8 IS 134 SO WE CAN OBSERVE THAR 2 IS INCREASED AND 3 IS DECRESE
THEREFORE WE HAVE TO APPLY THE SAMPLE PRICIPLE
OUR NUMBER 8999 WE HAVE TO TRAVERSE FROM BACKWARD TILL THE DIGIT IS NOT 9 THAN DECSEASE THAT INCRASE THAT NUMBER 1 AND DECREASE THE NEXT NUMBER BY 1 
SO OUR NUMBER WILL BECOME 9899-->SUM(35)

FOR NUMBER 1000899 THE SECOND SMALLEST NUMBER WILL BE 1000989(SECOND SMALLEST NUMBER WITH SAME SUM)



CODE:::->>

exception::

if(sum==1||D=1)//no second smallest number possible whose sum is 1
//as single digit number cannot be represented in any other form
return "-1";
if(s>9*D)return -1;//as if we have 4 digit number the higest possible number is 9999 so we cannot get a number
greater than sum(9+9+9+9)
if(sum==9*D) return "-1";

string ans(D,'0');
int sum=s;
int last=-1;

//starting from the backward first put 9 than...

for(int i=D-1li>=0;i--)
{
if(sum>9)
{
ans[i]='9';
sum-=9;
}
else if(sum>0){
{
ans[i]='0'+sum;
last=i;will help to access the first non zero element on case of presence of zero in the firt position
sum=0;
}
else
{
ans[i]='0';
}//here the number will become like 000899 so we have to increment first 0 to 1 and decrement
8 to 7

if(ans[0]=='0')
{
ans[0]='1';
ans[last]-=1;
}//first smallest number found now find the second smallest number
int l=D-2;//as if the number is 1003 3 is not 9 good so we increment it by 1 but next number cannot be dremented so we nave to d-2
while(ans[l]==9){
l--;

ans[l]+=1;
ans[l+1]-=1;

return ans;